"use strict";(self.webpackChunkapp_coin=self.webpackChunkapp_coin||[]).push([[200,306],{6200:(e,n,r)=>{r.a(e,(async(e,t)=>{try{r.r(n),r.d(n,{initMap:()=>u,render:()=>p});var a=r(5877),o=r(4306),s=r(613),c=r(2194),i=r(2627),h=r(5253),l=e([s]);async function u(e,n,r){await s.ready;const{YMap:t,YMapDefaultSchemeLayer:a,YMapDefaultFeaturesLayer:o,YMapMarker:c}=s,i=new t(e,n,[new a({}),new o({})]);return r.forEach((e=>{const n=document.createElement("div");n.className="marker";const r=document.createElement("img");r.className="marker__icon",r.src=e.iconSrc,n.append(r),i.addChild(new c({coordinates:e.coordinates},n))})),i}async function p(){const e=(0,a.el)("section.banks"),n=(0,a.el)("div.banks__container.container"),r=(0,a.el)("h2.banks__title.gap-reset.title.title-ptb","Карта банкоматов");i.appSpinner.show(),h.appMessage.hide();const t=(0,a.el)("div.banks__wrapper"),s=(0,a.el)("div.banks__map");(0,a.IX)(t,s),(0,a.IX)(n,r,t),(0,a.IX)(e,n);try{const e=(await(0,o.getBanks)()).payload;let n=[37.588144,55.733842];const r=[];if(e.length>0){let t=e[0].lat,a=e[0].lat,o=e[0].lon,s=e[0].lon;e.forEach((e=>{e.lat<t&&(t=e.lat),e.lat>a&&(a=e.lat),e.lon<o&&(o=e.lon),e.lon>s&&(s=e.lon),r.push({coordinates:[e.lon,e.lat],iconSrc:c})})),n=[(o+s)/2,(t+a)/2]}const t={location:{center:n,zoom:4.5}};await u(s,t,r),i.appSpinner.hide()}catch{i.appSpinner.hide(),h.appMessage.show(),h.appMessage.text.textContent="Ошибка свяи с сервером."}return e}s=(l.then?(await l)():l)[0],t()}catch(m){t(m)}}))},4306:(e,n,r)=>{r.r(n),r.d(n,{ErrorAuth:()=>a,ErrorCoinExchange:()=>i,ErrorGetAccount:()=>o,ErrorTransfer:()=>c,InvalidAuth:()=>t,InvalidTransfer:()=>s,allCurrencies:()=>d,authorization:()=>h,createAccount:()=>p,currencyBuy:()=>f,getAccount:()=>u,getAccounts:()=>l,getBanks:()=>g,getListCurrencies:()=>w,transferFunds:()=>m,wsConnCurrencyFeed:()=>y});class t extends Error{name="InvalidAuth"}class a extends Error{name="ErrorAuth"}class o extends Error{name="ErrorGetAccount"}class s extends Error{name="InvalidTransfer"}class c extends Error{name="ErrorTransfer"}class i extends Error{name="ErrorCoinExchange"}async function h(e){const n=[];if(e.login?e.login.includes(" ")?n.push({name:"login",message:"Логин не должен содержать пробелы."}):e.login.length<6&&n.push({name:"login",message:"Длинна логина не может быть меньше 6 символов."}):n.push({name:"login",message:"Логин не введен."}),e.password?e.password.includes(" ")?n.push({name:"password",message:"Пароль не должен содержать пробелы."}):e.password.length<6&&n.push({name:"password",message:"Длинна пароля не может быть меньше 6 символов."}):n.push({name:"password",message:"Пароль не введен."}),n.length){const e=new t;throw e.errors=n,e}const r=await fetch("http://localhost:3000/login",{method:"POST",body:JSON.stringify({login:e.login,password:e.password}),headers:{"Content-Type":"application/json"}});if(!r.ok)throw new Error;const o=await r.json();if(o.error){const e=new a;throw e.error={name:"submit",message:"Invalid password"===o.error?"Пытаемся войти с неверным паролем":"Такой пользователь не зарегестрирован."},e}return o}async function l(e){const n=await fetch("http://localhost:3000/accounts",{method:"GET",headers:{Authorization:`Basic ${e}`,"Content-Type":"application/json"}});if(!n.ok)throw new Error;return await n.json()}async function u(e,n){const r=await fetch(`http://localhost:3000/account/${n}`,{method:"GET",headers:{Authorization:`Basic ${e}`,"Content-Type":"application/json"}});if(!r.ok)throw new Error;const t=await r.json();if(t.error)throw new o;return t}async function p(e){const n=await fetch("http://localhost:3000/create-account",{method:"POST",headers:{Authorization:`Basic ${e}`,"Content-Type":"application/json"}});if(!n.ok)throw new Error;return await n.json()}async function m(e,n,r,t){const a=new s;if(!n||!r||!t){if(!n)throw a.errorMessages={name:"submit",message:"Не указан адрес счёта списания, или этот счёт не принадлежит нам"},a;if(!r)throw a.errorMessages={name:"number",message:"Не указан счёт зачисления, или этого счёта не существует"},a;if(!t)throw a.errorMessages={name:"amount",message:"Не указана сумма перевода, или она отрицательная"},a}const o=await fetch("http://localhost:3000/transfer-funds",{method:"POST",body:JSON.stringify({from:n,to:r,amount:t}),headers:{Authorization:`Basic ${e}`,"Content-Type":"application/json"}});if(!o.ok)throw new Error;const c=await o.json();if(c.error)throw"Invalid account from"===c.error?a.errorMessages={name:"submit",message:"Не указан адрес счёта списания, или этот счёт не принадлежит нам"}:"Invalid account to"===c.error?a.errorMessages={name:"number",message:"Не указан счёт зачисления, или этого счёта не существует"}:"Invalid amount"===c.error?a.errorMessages={name:"amount",message:"Не указана сумма перевода, или она отрицательная"}:"Overdraft prevented"===c.error&&(a.errorMessages={name:"amount",message:"Мы попытались перевести больше денег, чем доступно на счёте списания"}),a;return c}async function d(){const e=await fetch("http://localhost:3000/all-currencies");if(!e.ok)throw new Error;return await e.json()}async function w(e){const n=await fetch("http://localhost:3000/currencies",{method:"GET",headers:{Authorization:`Basic ${e}`,"Content-Type":"application/json"}});if(!n.ok)throw new Error;return await n.json()}async function f(e,n,r,t){const a=await fetch("http://localhost:3000/currency-buy",{method:"POST",body:JSON.stringify({from:n,to:r,amount:t}),headers:{Authorization:`Basic ${e}`,"Content-Type":"application/json"}});if(!a.ok)throw new Error;const o=await a.json();if(o.error||!t){const e=new i;throw"Unknown currency code"===o.error?e.messages={name:"invalidCode",message:"Передан неверный валютный код, код не поддерживается системой (валютный код списания или валютный код зачисления)."}:"Invalid amount"!==o.error&&t?"Not enough currency"===o.error?e.messages={name:"notCurrency",message:"На валютном счёте списания нет средств."}:"Overdraft prevented"===o.error&&(e.messages={name:"overdraftPrevented",message:"Попытка перевести больше, чем доступно на счёте списания."}):e.messages={name:"invalidAmount",message:"Не указана сумма перевода, или она отрицательная."},e}return o}async function g(){const e=await fetch("http://localhost:3000/banks");if(!e.ok)throw new Error;return await e.json()}function y(){return new WebSocket("ws://localhost:3000/currency-feed")}},2194:(e,n,r)=>{e.exports=r.p+"7a6f1b7db2cdc99163a2.svg"}}]);