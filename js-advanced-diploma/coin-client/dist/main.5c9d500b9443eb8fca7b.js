"use strict";(self.webpackChunkapp_coin=self.webpackChunkapp_coin||[]).push([[306],{4306:(e,r,n)=>{n.r(r),n.d(r,{ErrorAuth:()=>t,ErrorCoinExchange:()=>i,ErrorGetAccount:()=>s,ErrorTransfer:()=>c,InvalidAuth:()=>o,InvalidTransfer:()=>a,allCurrencies:()=>d,authorization:()=>h,createAccount:()=>l,currencyBuy:()=>p,getAccount:()=>m,getAccounts:()=>u,getBanks:()=>g,getListCurrencies:()=>f,transferFunds:()=>w,wsConnCurrencyFeed:()=>y});class o extends Error{name="InvalidAuth"}class t extends Error{name="ErrorAuth"}class s extends Error{name="ErrorGetAccount"}class a extends Error{name="InvalidTransfer"}class c extends Error{name="ErrorTransfer"}class i extends Error{name="ErrorCoinExchange"}async function h(e){const r=[];if(e.login?e.login.includes(" ")?r.push({name:"login",message:"Логин не должен содержать пробелы."}):e.login.length<6&&r.push({name:"login",message:"Длинна логина не может быть меньше 6 символов."}):r.push({name:"login",message:"Логин не введен."}),e.password?e.password.includes(" ")?r.push({name:"password",message:"Пароль не должен содержать пробелы."}):e.password.length<6&&r.push({name:"password",message:"Длинна пароля не может быть меньше 6 символов."}):r.push({name:"password",message:"Пароль не введен."}),r.length){const e=new o;throw e.errors=r,e}const n=await fetch("http://localhost:3000/login",{method:"POST",body:JSON.stringify({login:e.login,password:e.password}),headers:{"Content-Type":"application/json"}});if(!n.ok)throw new Error;const s=await n.json();if(s.error){const e=new t;throw e.error={name:"submit",message:"Invalid password"===s.error?"Пытаемся войти с неверным паролем":"Такой пользователь не зарегестрирован."},e}return s}async function u(e){const r=await fetch("http://localhost:3000/accounts",{method:"GET",headers:{Authorization:`Basic ${e}`,"Content-Type":"application/json"}});if(!r.ok)throw new Error;return await r.json()}async function m(e,r){const n=await fetch(`http://localhost:3000/account/${r}`,{method:"GET",headers:{Authorization:`Basic ${e}`,"Content-Type":"application/json"}});if(!n.ok)throw new Error;const o=await n.json();if(o.error)throw new s;return o}async function l(e){const r=await fetch("http://localhost:3000/create-account",{method:"POST",headers:{Authorization:`Basic ${e}`,"Content-Type":"application/json"}});if(!r.ok)throw new Error;return await r.json()}async function w(e,r,n,o){const t=new a;if(!r||!n||!o){if(!r)throw t.errorMessages={name:"submit",message:"Не указан адрес счёта списания, или этот счёт не принадлежит нам"},t;if(!n)throw t.errorMessages={name:"number",message:"Не указан счёт зачисления, или этого счёта не существует"},t;if(!o)throw t.errorMessages={name:"amount",message:"Не указана сумма перевода, или она отрицательная"},t}const s=await fetch("http://localhost:3000/transfer-funds",{method:"POST",body:JSON.stringify({from:r,to:n,amount:o}),headers:{Authorization:`Basic ${e}`,"Content-Type":"application/json"}});if(!s.ok)throw new Error;const c=await s.json();if(c.error)throw"Invalid account from"===c.error?t.errorMessages={name:"submit",message:"Не указан адрес счёта списания, или этот счёт не принадлежит нам"}:"Invalid account to"===c.error?t.errorMessages={name:"number",message:"Не указан счёт зачисления, или этого счёта не существует"}:"Invalid amount"===c.error?t.errorMessages={name:"amount",message:"Не указана сумма перевода, или она отрицательная"}:"Overdraft prevented"===c.error&&(t.errorMessages={name:"amount",message:"Мы попытались перевести больше денег, чем доступно на счёте списания"}),t;return c}async function d(){const e=await fetch("http://localhost:3000/all-currencies");if(!e.ok)throw new Error;return await e.json()}async function f(e){const r=await fetch("http://localhost:3000/currencies",{method:"GET",headers:{Authorization:`Basic ${e}`,"Content-Type":"application/json"}});if(!r.ok)throw new Error;return await r.json()}async function p(e,r,n,o){const t=await fetch("http://localhost:3000/currency-buy",{method:"POST",body:JSON.stringify({from:r,to:n,amount:o}),headers:{Authorization:`Basic ${e}`,"Content-Type":"application/json"}});if(!t.ok)throw new Error;const s=await t.json();if(s.error||!o){const e=new i;throw"Unknown currency code"===s.error?e.messages={name:"invalidCode",message:"Передан неверный валютный код, код не поддерживается системой (валютный код списания или валютный код зачисления)."}:"Invalid amount"!==s.error&&o?"Not enough currency"===s.error?e.messages={name:"notCurrency",message:"На валютном счёте списания нет средств."}:"Overdraft prevented"===s.error&&(e.messages={name:"overdraftPrevented",message:"Попытка перевести больше, чем доступно на счёте списания."}):e.messages={name:"invalidAmount",message:"Не указана сумма перевода, или она отрицательная."},e}return s}async function g(){const e=await fetch("http://localhost:3000/banks");if(!e.ok)throw new Error;return await e.json()}function y(){return new WebSocket("ws://localhost:3000/currency-feed")}}}]);