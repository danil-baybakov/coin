"use strict";(self.webpackChunkapp_coin=self.webpackChunkapp_coin||[]).push([[779,306],{2779:(e,s,t)=>{t.r(s),t.d(s,{render:()=>c});var r=t(5877),a=t(4306),n=t(8575),o=t(2627),i=t(5253);function c(){o.appSpinner.hide(),i.appMessage.hide();const e=(0,r.el)("section.auth"),s=(0,r.el)("div.auth__container.container.container-nc.pt-0");(0,r.IX)(e,s);const t=(0,r.el)("div.auth__form-wrapper");(0,r.IX)(s,t);const c=(0,r.el)("form.auth__form");(0,r.IX)(t,c);const u=(0,r.el)("div.auth__form-group.form__group"),m=(0,r.el)("h1.auth__form-title.title.gap-reset","Вход в аккаунт");(0,r.IX)(u,m);const l=(0,r.el)("div.auth__form-group.form__group"),p=(0,r.el)("lable.auth__form-lable.form__label","Логин"),h=(0,r.el)("div.auth__form-input-wrapper.input-wrapper"),d=(0,r.el)("input.auth__form-input.input",{type:"text"});d.dataset.name="login";const g=(0,r.el)("span.auth__form-message.input__message","Ошибка");g.dataset.name="loginMessage",(0,r.IX)(h,d,g),(0,r.IX)(l,p,h);const f=(0,r.el)("div.auth__form-group.form__group"),w=(0,r.el)("lable.auth__form-lable.form__label","Пароль"),_=(0,r.el)("div.auth__form-input-wrapper.input-wrapper"),v=(0,r.el)("input.auth__form-input.input",{type:"password"});v.dataset.name="password";const y=(0,r.el)("span.auth__form-message.input__message","Ошибка");y.dataset.name="passwordMessage",(0,r.IX)(_,v,y),(0,r.IX)(f,w,_);const E=(0,r.el)("div.auth__form-group.form__group"),b=(0,r.el)("button.auth__form-btn.btn.link-reset.btn-fill",{type:"submit"},"Войти");b.dataset.name="submit";const C=(0,r.el)("span.auth__form-message.btn__message",{id:"errorAuth"});return C.dataset.name="submitMessage",(0,r.IX)(E,b,C),b.addEventListener("click",(async e=>{e.preventDefault();const s={},t={},r={};o.appSpinner.show(),i.appMessage.hide();for(let e=0;e<c.elements.length;++e){const a=c[e];if(!a.hasAttribute("data-name"))continue;const n=a.nextElementSibling;a.value=a.value.trim(),s[a.dataset.name]=a.value,t[a.dataset.name]=a,r[n.dataset.name]=n,a.classList.remove("is-message","is-invalid","is-success"),n.classList.remove("message-error","message-success"),n.textContent="",a.addEventListener("input",(()=>{a.classList.remove("is-message","is-invalid","is-success"),n.classList.remove("message-error","message-success"),n.textContent=""}))}c.addEventListener("click",(e=>{e._isClickForm=!0})),window.addEventListener("click",(e=>{e._isClickForm||["login","password","submit"].map((e=>{t[e].classList.remove("is-message","is-invalid","is-success"),t[e].value="",r[`${e}Message`].classList.remove("message-error","message-success"),r[`${e}Message`].textContent=""}))}));try{const e=await(0,a.authorization)(s);o.appSpinner.hide(),i.appMessage.hide(),sessionStorage.setItem("token",e.payload.token),history.pushState(null,"","/accounts"),(0,n.renderElement)("header",document.querySelector("#appHeader"),!0),(0,n.renderElement)("user",document.querySelector("#appContainer"))}catch(e){if(o.appSpinner.hide(),"InvalidAuth"===e.name)for(const s of e.errors)t[s.name].classList.add("is-message","is-invalid"),r[`${s.name}Message`].classList.add("message-error"),r[`${s.name}Message`].textContent=s.message;else t.submit.classList.add("is-message","is-invalid"),r.submitMessage.classList.add("message-error"),"ErrorAuth"===e.name?r.submitMessage.textContent=e.error.message:(i.appMessage.show(),i.appMessage.text.textContent="Ошибка свяи с сервером.")}})),(0,r.IX)(c,u,l,f,E),e}},4306:(e,s,t)=>{t.r(s),t.d(s,{ErrorAuth:()=>a,ErrorCoinExchange:()=>c,ErrorGetAccount:()=>n,ErrorTransfer:()=>i,InvalidAuth:()=>r,InvalidTransfer:()=>o,allCurrencies:()=>d,authorization:()=>u,createAccount:()=>p,currencyBuy:()=>f,getAccount:()=>l,getAccounts:()=>m,getBanks:()=>w,getListCurrencies:()=>g,transferFunds:()=>h,wsConnCurrencyFeed:()=>_});class r extends Error{name="InvalidAuth"}class a extends Error{name="ErrorAuth"}class n extends Error{name="ErrorGetAccount"}class o extends Error{name="InvalidTransfer"}class i extends Error{name="ErrorTransfer"}class c extends Error{name="ErrorCoinExchange"}async function u(e){const s=[];if(e.login?e.login.includes(" ")?s.push({name:"login",message:"Логин не должен содержать пробелы."}):e.login.length<6&&s.push({name:"login",message:"Длинна логина не может быть меньше 6 символов."}):s.push({name:"login",message:"Логин не введен."}),e.password?e.password.includes(" ")?s.push({name:"password",message:"Пароль не должен содержать пробелы."}):e.password.length<6&&s.push({name:"password",message:"Длинна пароля не может быть меньше 6 символов."}):s.push({name:"password",message:"Пароль не введен."}),s.length){const e=new r;throw e.errors=s,e}const t=await fetch("http://localhost:3000/login",{method:"POST",body:JSON.stringify({login:e.login,password:e.password}),headers:{"Content-Type":"application/json"}});if(!t.ok)throw new Error;const n=await t.json();if(n.error){const e=new a;throw e.error={name:"submit",message:"Invalid password"===n.error?"Пытаемся войти с неверным паролем":"Такой пользователь не зарегестрирован."},e}return n}async function m(e){const s=await fetch("http://localhost:3000/accounts",{method:"GET",headers:{Authorization:`Basic ${e}`,"Content-Type":"application/json"}});if(!s.ok)throw new Error;return await s.json()}async function l(e,s){const t=await fetch(`http://localhost:3000/account/${s}`,{method:"GET",headers:{Authorization:`Basic ${e}`,"Content-Type":"application/json"}});if(!t.ok)throw new Error;const r=await t.json();if(r.error)throw new n;return r}async function p(e){const s=await fetch("http://localhost:3000/create-account",{method:"POST",headers:{Authorization:`Basic ${e}`,"Content-Type":"application/json"}});if(!s.ok)throw new Error;return await s.json()}async function h(e,s,t,r){const a=new o;if(!s||!t||!r){if(!s)throw a.errorMessages={name:"submit",message:"Не указан адрес счёта списания, или этот счёт не принадлежит нам"},a;if(!t)throw a.errorMessages={name:"number",message:"Не указан счёт зачисления, или этого счёта не существует"},a;if(!r)throw a.errorMessages={name:"amount",message:"Не указана сумма перевода, или она отрицательная"},a}const n=await fetch("http://localhost:3000/transfer-funds",{method:"POST",body:JSON.stringify({from:s,to:t,amount:r}),headers:{Authorization:`Basic ${e}`,"Content-Type":"application/json"}});if(!n.ok)throw new Error;const i=await n.json();if(i.error)throw"Invalid account from"===i.error?a.errorMessages={name:"submit",message:"Не указан адрес счёта списания, или этот счёт не принадлежит нам"}:"Invalid account to"===i.error?a.errorMessages={name:"number",message:"Не указан счёт зачисления, или этого счёта не существует"}:"Invalid amount"===i.error?a.errorMessages={name:"amount",message:"Не указана сумма перевода, или она отрицательная"}:"Overdraft prevented"===i.error&&(a.errorMessages={name:"amount",message:"Мы попытались перевести больше денег, чем доступно на счёте списания"}),a;return i}async function d(){const e=await fetch("http://localhost:3000/all-currencies");if(!e.ok)throw new Error;return await e.json()}async function g(e){const s=await fetch("http://localhost:3000/currencies",{method:"GET",headers:{Authorization:`Basic ${e}`,"Content-Type":"application/json"}});if(!s.ok)throw new Error;return await s.json()}async function f(e,s,t,r){const a=await fetch("http://localhost:3000/currency-buy",{method:"POST",body:JSON.stringify({from:s,to:t,amount:r}),headers:{Authorization:`Basic ${e}`,"Content-Type":"application/json"}});if(!a.ok)throw new Error;const n=await a.json();if(n.error||!r){const e=new c;throw"Unknown currency code"===n.error?e.messages={name:"invalidCode",message:"Передан неверный валютный код, код не поддерживается системой (валютный код списания или валютный код зачисления)."}:"Invalid amount"!==n.error&&r?"Not enough currency"===n.error?e.messages={name:"notCurrency",message:"На валютном счёте списания нет средств."}:"Overdraft prevented"===n.error&&(e.messages={name:"overdraftPrevented",message:"Попытка перевести больше, чем доступно на счёте списания."}):e.messages={name:"invalidAmount",message:"Не указана сумма перевода, или она отрицательная."},e}return n}async function w(){const e=await fetch("http://localhost:3000/banks");if(!e.ok)throw new Error;return await e.json()}function _(){return new WebSocket("ws://localhost:3000/currency-feed")}}}]);